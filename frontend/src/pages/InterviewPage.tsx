import React, { useState, useCallback, useEffect, useRef } from 'react'
import { useNavigate, useLocation } from 'react-router-dom'
import AudioRecorder from '../components/AudioRecorder'
import { startInterview, saveInterviewAnswer, deleteInterview, InterviewData } from '../services/api'
import { ttsClient } from '../services/tts'

const InterviewPage: React.FC = () => {
  const navigate = useNavigate()
  const location = useLocation()
  const [isRecording, setIsRecording] = useState(false)
  const [recordingStatus, setRecordingStatus] = useState<'idle' | 'recording' | 'uploading' | 'recorded' | 'error'>('idle')
  const [audioBlob, setAudioBlob] = useState<Blob | null>(null)
  const [isAISpeaking, setIsAISpeaking] = useState(false)
  const [isAIPreparingToSpeak, setIsAIPreparingToSpeak] = useState(false)
  const [showTranscription, setShowTranscription] = useState(false)
  const [showExitModal, setShowExitModal] = useState(false)
  const [showCompletionModal, setShowCompletionModal] = useState(false)
  const [currentQuestion, setCurrentQuestion] = useState("–ù–∞—á–∏–Ω–∞–µ–º —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ...")
  const [transcription, setTranscription] = useState("")
  const [lastAnalysis, setLastAnalysis] = useState<any>(null)  // –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
  const [interviewData, setInterviewData] = useState<InterviewData | null>(null)
  const [interviewStatus, setInterviewStatus] = useState<'starting' | 'active' | 'completed' | 'error'>('starting')
  const isInitializing = useRef(false)
  
  // –ü–æ–ª—É—á–∞–µ–º ID –≤–∞–∫–∞–Ω—Å–∏–∏ –∏–∑ state —Ä–æ—É—Ç–µ—Ä–∞
  const vacancyId = location.state?.vacancyId

  console.log('üîç –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–ª—Å—è, —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', {
    vacancyId,
    interviewData,
    interviewStatus,
    'location.state': location.state
  })

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('üöÄ useEffect –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω, vacancyId:', vacancyId)
    console.log('üîç –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ interviewData:', interviewData)
    console.log('üîç isInitializing.current:', isInitializing.current)
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (interviewData !== null || isInitializing.current) {
      console.log('‚ö†Ô∏è –ò–Ω—Ç–µ—Ä–≤—å—é —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º')
      return
    }
    
    isInitializing.current = true
    
    if (!vacancyId) {
      console.warn('‚ùå ID –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
      // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∑–≤–æ–ª–∏–º –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –±–µ–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      const testData = {
        interview_id: 'test_interview_id',
        mlinterview_id: '',
        status: 'active' as const
      }
      console.log('‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', testData)
      setInterviewData(testData)
      setInterviewStatus('active')
      setCurrentQuestion('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ä–∞—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ. –£–¥–∞—á–∏! (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)')
      return
    }

    const initializeInterview = async () => {
      try {
        console.log('–ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è...')
        setInterviewStatus('starting')
        setCurrentQuestion('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ...')
        
        const response = await startInterview(vacancyId)
        console.log('üîç –û—Ç–≤–µ—Ç –æ—Ç startInterview:', response)
        console.log('üîç response.data:', response.data)
        console.log('üîç response.data.interview_id:', response.data?.interview_id)
        console.log('üîç JSON.stringify(response):', JSON.stringify(response, null, 2))
        
        if (response.success && response.data) {
          const interviewData = {
            interview_id: response.data.interview_id,
            mlinterview_id: '', // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ
            status: 'active' as const
          }
          console.log('‚úÖ –°–æ–∑–¥–∞–µ–º interviewData:', interviewData)
          setInterviewData(interviewData)
          
          setInterviewStatus('active')
          const firstQuestion = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ä–∞—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ. –£–¥–∞—á–∏!'
          setCurrentQuestion(firstQuestion)
          console.log('‚úÖ –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –æ–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
          
          // –û–∑–≤—É—á–∏–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
          playAIQuestion(firstQuestion)
        } else {
          console.error('–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞:', response.error)
          // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
          setInterviewData({
            interview_id: 'test_interview_id',
            mlinterview_id: '',
            status: 'active'
          })
          setInterviewStatus('active')
          setCurrentQuestion('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π! –ö–æ—Ä–æ—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ. –£–¥–∞—á–∏! (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Ä–µ–∂–∏–º)')
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è:', error)
        // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é  
        setInterviewData({
          interview_id: 'test_interview_id',
          mlinterview_id: '',
          status: 'active'
        })
        setInterviewStatus('active')
        setCurrentQuestion('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π! –ö–æ—Ä–æ—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ. –£–¥–∞—á–∏! (–æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)')
      }
    }

    initializeInterview()
  }, [vacancyId])


  const handleRecordingStart = useCallback(() => {
    setIsRecording(true)
    setRecordingStatus('recording')
    setTranscription('') // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é
  }, [])

  const handleRecordingStop = useCallback(() => {
    setIsRecording(false)
    setRecordingStatus('uploading')
  }, [])

  const handleUploadSuccess = useCallback((blob?: Blob) => {
    if (blob) {
      setAudioBlob(blob)
    }
    setRecordingStatus('recorded')
    
    // Fallback: –µ—Å–ª–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –Ω–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é
    setTimeout(() => {
      if (!transcription.trim()) {
        console.log('üìù –ù–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é...')
        setTranscription('–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏')
      }
    }, 30000)
  }, [transcription])

  const handleUploadError = useCallback(() => {
    setRecordingStatus('error')
    setTimeout(() => setRecordingStatus('idle'), 3000)
  }, [])

  const handleTranscription = useCallback((text: string) => {
    console.log('–ü–æ–ª—É—á–µ–Ω–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è:', text)
    setTranscription(text)
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏
    if (text.trim()) {
      console.log('–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞, —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:', text)
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–º–∏—Ç–∏—Ä—É–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      if (!text.includes('–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è')) {
        // –ï—Å–ª–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –ø—É—Å—Ç–∞—è –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫–∞—è, –¥–æ–±–∞–≤–∏–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        setTimeout(() => {
          if (text.length < 10) {
            setTranscription('–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏')
            console.log('üìù –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è')
          }
        }, 1000)
      }
    }
  }, [])

  const handleAnalysis = useCallback(async (analysis: any) => {
    console.log('üéØ –ü–æ–ª—É—á–µ–Ω –∞–Ω–∞–ª–∏–∑ —Ä–µ—á–∏:', analysis)
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞
    setLastAnalysis(analysis)
    console.log('üíæ –ê–Ω–∞–ª–∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–º–µ—Å—Ç–µ —Å –æ—Ç–≤–µ—Ç–æ–º')
  }, [])

  const handleSendAnswer = useCallback(async () => {
    console.log('üîç handleSendAnswer –≤—ã–∑–≤–∞–Ω, —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', {
      interviewData,
      transcription: transcription.trim(),
      interviewStatus
    })

    if (!interviewData || !transcription.trim()) {
      console.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞', { interviewData, transcription: transcription.trim() })
      return
    }

    if (!interviewData.interview_id) {
      console.error('interview_id –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç', { interviewData })
      setRecordingStatus('error')
      setTimeout(() => setRecordingStatus('idle'), 3000)
      return
    }

    try {
      setRecordingStatus('uploading')

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –Ω–µ—Ç
      const isFirstRequest = !interviewData.mlinterview_id || interviewData.mlinterview_id === ''
      
      console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${isFirstRequest ? '–ø–µ—Ä–≤—ã–π' : '–ø–æ—Å–ª–µ–¥—É—é—â–∏–π'} –æ—Ç–≤–µ—Ç:`, {
        interview_id: interviewData.interview_id,
        mlinterview_id: interviewData.mlinterview_id,
        question: isFirstRequest ? '' : (interviewData.question || currentQuestion),
        answer_text: transcription
      })

      const response = await saveInterviewAnswer(
        interviewData.interview_id,
        interviewData.mlinterview_id || '',
        isFirstRequest ? '' : (interviewData.question || currentQuestion),
        transcription,
        lastAnalysis  // –ü–µ—Ä–µ–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Ä–µ—á–∏
      )

      if (response.success && response.data) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è
        if (response.data.status === 'completed') {
          setInterviewStatus('completed')
          setCurrentQuestion('–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
          setShowCompletionModal(true)
        } else {
          // –ü–æ–ª—É—á–∏–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
          const nextQuestion = response.data.question || response.data.current_question
          if (nextQuestion) {
            setCurrentQuestion(nextQuestion)
            setInterviewData(prev => prev ? {
              ...prev,
              mlinterview_id: response.data.mlinterview_id || prev.mlinterview_id,
              question: nextQuestion
            } : null)
            
            // –û–∑–≤—É—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
            playAIQuestion(nextQuestion)
          }

          // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ
        }

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø–∏—Å–∏
        setRecordingStatus('idle')
        setTranscription('')
        setLastAnalysis(null)  // –û—á–∏—â–∞–µ–º –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        setAudioBlob(null)
      } else {
        throw new Error(response.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞:', error)
      setRecordingStatus('error')
      setTimeout(() => setRecordingStatus('idle'), 3000)
    }
  }, [interviewData, transcription, currentQuestion, navigate])

  const handleSendAndNext = useCallback(async () => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
    await handleSendAnswer()
  }, [handleSendAnswer])

  const handleRerecord = useCallback(() => {
    setAudioBlob(null)
    setRecordingStatus('idle')
  }, [])



  const handleExitClick = useCallback(() => {
    setShowExitModal(true)
  }, [])

  const handleConfirmExit = useCallback(async () => {
    // –£–¥–∞–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤—å—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ—Å—Ç—å interview_id
    if (interviewData?.interview_id) {
      try {
        console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤—å—é —Å ID:', interviewData.interview_id)
        const result = await deleteInterview(interviewData.interview_id)
        
        if (result.success) {
          console.log('‚úÖ –ò–Ω—Ç–µ—Ä–≤—å—é —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ')
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–≤—å—é:', result.error)
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–Ω—Ç–µ—Ä–≤—å—é:', error)
      }
    }

    // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–ø–∏—Å–∏
    setIsRecording(false)
    setRecordingStatus('idle')
    setAudioBlob(null)
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    navigate('/welcomescreen')
  }, [navigate, interviewData?.interview_id])

  const handleCancelExit = useCallback(() => {
    setShowExitModal(false)
  }, [])

  const handleLogoClick = useCallback(() => {
    // –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ª–æ–≥–æ—Ç–∏–ø –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã—Ö–æ–¥–∞
    setShowExitModal(true)
  }, [])

  const handleCompletionModalClose = useCallback(() => {
    setShowCompletionModal(false)
    navigate('/welcomescreen')
  }, [navigate])

  const playAIQuestion = useCallback(async (questionText: string) => {
    if (!questionText || questionText.trim() === '') return;
    
    try {
      console.log('üé§ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞:', questionText);
      
      // –°—Ä–∞–∑—É –±–ª–æ–∫–∏—Ä—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–∞ —ç—Ç–∞–ø–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
      setIsAIPreparingToSpeak(true);
      
      // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ TTS —Å–µ—Ä–≤–µ—Ä—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (!ttsClient.isConnected()) {
        await ttsClient.connect();
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –∞—É–¥–∏–æ –æ—Ç TTS —Å–µ—Ä–≤–µ—Ä–∞
      const audioBlob = await ttsClient.speak(questionText, 'xenia', 48000);
      
      // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
      const audioUrl = URL.createObjectURL(audioBlob);
      const audio = new Audio(audioUrl);
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞—É–¥–∏–æ
      audio.onended = () => {
        console.log('üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ - –≤—ã–∫–ª—é—á–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É');
        setIsAISpeaking(false);
        setIsAIPreparingToSpeak(false);
        URL.revokeObjectURL(audioUrl);
      };
      
      audio.onerror = (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ:', error);
        setIsAISpeaking(false);
        setIsAIPreparingToSpeak(false);
        URL.revokeObjectURL(audioUrl);
      };

      audio.onpause = () => {
        console.log('‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ - –≤—ã–∫–ª—é—á–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É');
        setIsAISpeaking(false);
        setIsAIPreparingToSpeak(false);
      };
      
      // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –∏ —É–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
      console.log('‚ú® –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –ø–µ—Ä–µ–¥ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º');
      setIsAISpeaking(true);
      setIsAIPreparingToSpeak(false);
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
      await audio.play();
      console.log('‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞ –∏–ª–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–µ—á–∏:', error);
      setIsAISpeaking(false);
      setIsAIPreparingToSpeak(false);
    }
  }, [])

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TTS –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('üé§ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TTS –∫–ª–∏–µ–Ω—Ç–∞...')
    ttsClient.connect().catch((error) => {
      console.warn('‚ö†Ô∏è TTS —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error)
    })
    
    return () => {
      ttsClient.disconnect()
    }
  }, [])

  return (
    <div className="min-h-screen bg-dark-950 text-white relative overflow-hidden focus:outline-none">
      {/* –§–æ–Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute top-1/4 -left-48 w-96 h-96 rounded-full" style={{ background: 'radial-gradient(circle, rgba(59, 130, 246, 0.08) 0%, rgba(59, 130, 246, 0.04) 30%, rgba(59, 130, 246, 0.01) 60%, transparent 100%)', filter: 'blur(60px)' }}></div>
        <div className="absolute top-1/3 -right-48 w-96 h-96 rounded-full" style={{ background: 'radial-gradient(circle, rgba(168, 85, 247, 0.08) 0%, rgba(168, 85, 247, 0.04) 30%, rgba(168, 85, 247, 0.01) 60%, transparent 100%)', filter: 'blur(60px)' }}></div>
        <div className="absolute bottom-1/4 left-1/3 w-96 h-96 rounded-full" style={{ background: 'radial-gradient(circle, rgba(16, 185, 129, 0.06) 0%, rgba(16, 185, 129, 0.03) 30%, rgba(16, 185, 129, 0.01) 60%, transparent 100%)', filter: 'blur(60px)' }}></div>
        <div className="absolute top-1/2 right-1/4 w-96 h-96 rounded-full" style={{ background: 'radial-gradient(circle, rgba(245, 158, 11, 0.06) 0%, rgba(245, 158, 11, 0.03) 30%, rgba(245, 158, 11, 0.01) 60%, transparent 100%)', filter: 'blur(60px)' }}></div>
      </div>

      {/* TopPanel –∫–∞–∫ –Ω–∞ Welcome —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –∫–Ω–æ–ø–∫–æ–π –ù–∞–∑–∞–¥ */}
      <div className="fixed top-0 left-0 right-0 z-50 p-6">
        <div className="glass rounded-2xl px-8 py-4 w-full">
          <div className="flex items-center justify-between">
            {/* –õ–æ–≥–æ—Ç–∏–ø/–Ω–∞–∑–≤–∞–Ω–∏–µ */}
            <div 
              className="flex items-center space-x-3 cursor-pointer group transition-all duration-200 hover:scale-105"
              onClick={handleLogoClick}
            >
              <img 
                src="/vtb.png" 
                alt="VTB Logo" 
                className="w-10 h-10 object-contain rounded-lg transition-all duration-200 group-hover:opacity-80"
              />
              <h1 className="text-xl font-semibold text-white tracking-tight transition-all duration-200 group-hover:text-accent-blue">MORE.tech</h1>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ */}
            <button 
              onClick={handleExitClick}
              className="group relative overflow-hidden px-4 py-2.5 rounded-xl bg-dark-800/50 hover:bg-dark-700/50 text-dark-300 hover:text-white transition-all duration-300 border border-dark-700/50 hover:border-dark-600/50 focus:outline-none"
            >
              <div className="flex items-center space-x-2 relative z-10">
                <svg className="w-4 h-4 transition-colors" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.42-1.41L7.83 13H20v-2z"/>
                </svg>
                <span className="text-sm font-medium">–ù–∞–∑–∞–¥</span>
              </div>
              <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity animate-shimmer"></div>
            </button>
          </div>
        </div>
      </div>
      
      {/* –í–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –≤ —Å—Ç–∏–ª–µ Zoom/Discord */}
      <div className="relative z-10 pt-40 pb-20 px-6">
        <div className="w-full max-w-7xl mx-auto">
          
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ */}
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold mb-4 bg-gradient-to-r from-white via-white to-white/80 bg-clip-text text-transparent">
              AI –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ
            </h1>
            
            <div className="w-32 h-px bg-gradient-to-r from-transparent via-dark-600 to-transparent mx-auto mb-8"></div>
            
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≤–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ */}
          <div className="mb-16">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-5xl mx-auto">
              
              {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Ç–µ–ø–µ—Ä—å —Å–ª–µ–≤–∞ */}
              <div className="relative glass rounded-3xl border border-dark-600/30 overflow-hidden">
                <div style={{ aspectRatio: '4/3' }} className="relative">
                  {/* –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                  <div className="absolute inset-0 flex items-center justify-center">
                    <div className={`relative transition-all duration-300 ${
                      isRecording ? 'animate-pulse' : ''
                    }`}>
                      <div className={`w-40 h-40 rounded-full border-4 transition-all duration-300 ${
                        isRecording 
                          ? 'border-green-500 shadow-xl shadow-green-500/50' 
                          : 'border-dark-600'
                      }`} style={{
                        background: isRecording 
                          ? 'linear-gradient(135deg, rgba(34, 197, 94, 0.3), rgba(16, 185, 129, 0.3))'
                          : 'linear-gradient(135deg, rgba(34, 197, 94, 0.1), rgba(16, 185, 129, 0.1))'
                      }}>
                        <div className="w-full h-full rounded-full bg-gradient-to-br from-green-500/30 to-emerald-500/30 flex items-center justify-center">
                          <svg className="w-20 h-20 text-green-400" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                          </svg>
                        </div>
                      </div>
                      
                            </div>
                          </div>
                        </div>
                
                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
                <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-dark-900/90 to-transparent p-6">
                  <div className="flex items-center justify-center">
                    <div className="flex items-center space-x-3">
                      <span className="text-white font-semibold text-lg">–í—ã</span>
                    </div>
                  </div>
                </div>
                            </div>
                    
              {/* AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç - —Ç–µ–ø–µ—Ä—å —Å–ø—Ä–∞–≤–∞ */}
              <div className="relative glass rounded-3xl border border-dark-600/30 overflow-hidden">
                <div style={{ aspectRatio: '4/3' }} className="relative">
                  {/* –ê–≤–∞—Ç–∞—Ä AI */}
                  <div className="absolute inset-0 flex items-center justify-center">
                    <div className={`relative transition-all duration-300 ${
                      isAISpeaking ? 'animate-pulse' : ''
                    }`}>
                      <div className={`w-40 h-40 rounded-full border-4 transition-all duration-300 ${
                        isAISpeaking 
                          ? 'border-accent-blue shadow-xl shadow-accent-blue/50' 
                          : 'border-dark-600'
                      }`} style={{
                        background: isAISpeaking 
                          ? 'linear-gradient(135deg, rgba(59, 130, 246, 0.3), rgba(139, 92, 246, 0.3))'
                          : 'linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1))'
                      }}>
                        <img 
                          src="/assistant.jpg" 
                          alt="AI Assistant"
                          className="w-full h-full rounded-full object-cover"
                          onError={(e) => {
                            e.currentTarget.style.display = 'none'
                            e.currentTarget.nextElementSibling?.classList.remove('hidden')
                          }}
                        />
                        <div className="hidden w-full h-full rounded-full bg-gradient-to-br from-accent-blue/30 to-accent-purple/30 flex items-center justify-center">
                          <svg className="w-20 h-20 text-accent-blue" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                          </svg>
                          </div>
                        </div>
                      
                    </div>
                    </div>
                    
                  {/* –ö–Ω–æ–ø–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –¥–ª—è AI */}
                      <button
                    onClick={() => setShowTranscription(true)}
                    className="absolute top-4 right-4 bg-dark-800/80 backdrop-blur-sm text-white px-4 py-2 rounded-full text-sm hover:bg-dark-700/80 transition-colors focus:outline-none"
                  >
                    –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è
                  </button>
                        </div>
                
                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± AI */}
                <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-dark-900/90 to-transparent p-6">
                  <div className="flex items-center justify-center">
                    <div className="flex items-center space-x-3">
                      <span className="text-white font-semibold text-lg">–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ö–∏—Ä–∏–ª–ª</span>
                    </div>
                  </div>
                </div>
                </div>
            </div>
          </div>

          {/* –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div className="flex items-center justify-center">
                    {recordingStatus === 'recorded' ? (
          <div className="flex flex-col items-center space-y-4">
            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ */}
            {transcription && (
              <div className="max-w-2xl p-4 bg-dark-800/50 rounded-xl border border-dark-600/30">
                <h4 className="text-sm text-dark-400 mb-2">–í–∞—à –æ—Ç–≤–µ—Ç:</h4>
                <p className="text-white text-sm leading-relaxed">{transcription}</p>
                        </div>
            )}
                      
            <div className="flex items-center space-x-4">
                      <button
                        onClick={handleRerecord}
                className="px-6 py-3 bg-dark-700/50 hover:bg-dark-600/50 text-dark-300 hover:text-white border border-dark-600/50 hover:border-dark-500/50 rounded-xl font-medium transition-all duration-300 hover:scale-105 focus:outline-none"
              >
                –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å
              </button>
              <button
                onClick={handleSendAndNext}
                disabled={!transcription.trim()}
                className="px-6 py-3 bg-gradient-to-r from-accent-blue to-accent-purple hover:from-accent-blue/90 hover:to-accent-purple/90 disabled:from-gray-600 disabled:to-gray-700 disabled:cursor-not-allowed text-white rounded-xl font-medium transition-all duration-300 hover:scale-105 shadow-lg shadow-accent-blue/25 disabled:shadow-none focus:outline-none"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                      </button>
                    </div>
                  </div>
            ) : (
              <div className="relative flex items-center justify-center min-h-[120px]">
                {/* –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–µ–≤–∞ - –∏—Å—á–µ–∑–∞–µ—Ç –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ */}
                <div className={`absolute right-full mr-8 text-right w-80 transition-all duration-500 focus:outline-none select-none pointer-events-none ${isRecording ? 'opacity-0' : 'opacity-100'}`}>
                  {(isAISpeaking || isAIPreparingToSpeak) ? (
                    <div className="focus:outline-none">
                      <p className="text-amber-400 text-sm leading-relaxed font-medium focus:outline-none">
                        {isAIPreparingToSpeak ? '‚è≥ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ö–∏—Ä–∏–ª–ª –≥–æ—Ç–æ–≤–∏—Ç –≤–æ–ø—Ä–æ—Å...' : 'üé§ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ö–∏—Ä–∏–ª–ª –≥–æ–≤–æ—Ä–∏—Ç...'}
                      </p>
                      <p className="text-dark-400 text-xs mt-2 focus:outline-none">
                        –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞, –∑–∞—Ç–µ–º –º–æ–∂–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å.
                      </p>
                </div>
              ) : (
                    <div className="focus:outline-none">
                      <p className="text-dark-300 text-sm leading-relaxed focus:outline-none">
                        –ù–∞–∂–º–∏—Ç–µ –Ω–∞ <span className="text-red-400 font-medium focus:outline-none">–∫—Ä–∞—Å–Ω—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω</span> –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏. 
                        –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ö–∏—Ä–∏–ª–ª –∂–¥—ë—Ç –≤–∞—à–µ–≥–æ —Ä–∞—Å—Å–∫–∞–∑–∞ –æ —Å–µ–±–µ.
                      </p>
                      <p className="text-dark-400 text-xs mt-2 focus:outline-none">
                        –ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –≤–∞—à–µ–π —Ä–µ—á–∏, –≤—ã–∫–ª—é—á–∏—Ç–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω.
                      </p>
                    </div>
                  )}
                </div>
                
                {/* –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤—Å–µ–≥–¥–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ */}
                  <AudioRecorder
                    onRecordingStart={handleRecordingStart}
                    onRecordingStop={handleRecordingStop}
                    onUploadSuccess={handleUploadSuccess}
                    onUploadError={handleUploadError}
                    onTranscription={handleTranscription}
                    onAnalysis={handleAnalysis}
                    isRecording={isRecording}
                    disabled={recordingStatus === 'uploading' || interviewStatus !== 'active' || isAISpeaking || isAIPreparingToSpeak}
                  />
                </div>
              )}
            </div>
          </div>
                </div>
                
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ */}
      {showTranscription && (
        <div className="fixed inset-0 z-50 flex items-center justify-center p-4">
          {/* –§–æ–Ω */}
          <div 
            className="absolute inset-0 bg-black/70 backdrop-blur-sm animate-fade-in"
            onClick={() => setShowTranscription(false)}
          ></div>
          
          {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
          <div className="relative glass rounded-3xl max-w-2xl w-full max-h-[80vh] border border-dark-600/30 shadow-2xl animate-fade-in-scale overflow-hidden">
            <div className="p-6">
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-white font-semibold text-xl">–¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å</h3>
                <button
                  onClick={() => setShowTranscription(false)}
                  className="w-10 h-10 bg-dark-700/50 hover:bg-dark-600/50 rounded-full flex items-center justify-center text-dark-300 hover:text-white transition-colors focus:outline-none"
                >
                  <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"/>
                </svg>
                </button>
                </div>
                
              <div className="overflow-y-auto space-y-4 max-h-[60vh]">
                {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç AI */}
                <div className="flex items-start space-x-3 animate-fade-in">
                  <div className="w-12 h-12 bg-gradient-to-br from-accent-blue/30 to-accent-purple/30 rounded-full flex items-center justify-center flex-shrink-0 border border-accent-blue/30">
                    <svg className="w-6 h-6 text-accent-blue" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                    </svg>
                  </div>
                  <div className="flex-1">
                    <div className="text-sm text-accent-blue mb-2 font-medium">–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ö–∏—Ä–∏–ª–ª</div>
                    <div className="glass rounded-xl p-4 border border-accent-blue/20">
                      <p className="text-dark-200 leading-relaxed">{currentQuestion}</p>
                  </div>
                  </div>
                </div>
                
                {/* –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                {audioBlob && (
                  <div className="flex items-start space-x-3 animate-fade-in">
                    <div className="w-12 h-12 bg-gradient-to-br from-green-500/30 to-emerald-500/30 rounded-full flex items-center justify-center flex-shrink-0 border border-green-500/30">
                      <svg className="w-6 h-6 text-green-400" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                    </svg>
                  </div>
                    <div className="flex-1">
                      <div className="text-sm text-green-400 mb-2 font-medium">–í—ã</div>
                      <div className="glass rounded-xl p-4 border border-green-500/20">
                        <div className="flex items-center space-x-2 mb-2">
                          <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                          <span className="text-green-300 text-sm">–ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å –ø–æ–ª—É—á–µ–Ω–∞</span>
                  </div>
                        <p className="text-dark-200">–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è...</p>
                </div>
              </div>
            </div>
          )}
        </div>

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–Ω–∏–∑—É */}
              <div className="mt-6 pt-4 border-t border-dark-600/30">
                <div className="flex items-center justify-center space-x-2 text-dark-400 text-sm">
                  <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                  <span>–°–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞</span>
                  </div>
                  </div>
                </div>
        </div>
      </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞ */}
      {showExitModal && (
        <div className="fixed inset-0 z-50 flex items-center justify-center p-4">
          {/* –§–æ–Ω */}
          <div 
            className="absolute inset-0 bg-black/70 backdrop-blur-sm animate-fade-in"
            onClick={handleCancelExit}
          ></div>
          
          {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
          <div className="relative glass rounded-3xl max-w-md w-full border border-dark-600/30 shadow-2xl animate-fade-in-scale overflow-hidden">
            <div className="p-6">
            <div className="text-center mb-6">
                <div className="w-16 h-16 bg-red-500/20 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg className="w-8 h-8 text-red-400" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/>
                </svg>
              </div>
                <h3 className="text-white font-semibold text-xl mb-2">–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ?</h3>
                <p className="text-dark-300 text-sm">
                  –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏? –≠—Ç–æ –ø—Ä–µ—Ä–≤–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –∏ –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.
              </p>
            </div>
            
              <div className="flex items-center space-x-3">
              <button
                  onClick={handleCancelExit}
                  className="flex-1 px-6 py-3 glass border border-dark-600/40 hover:border-dark-500/50 text-dark-300 hover:text-white rounded-xl font-medium transition-all duration-300 hover:scale-105 focus:outline-none"
              >
                  –û—Ç–º–µ–Ω–∞
              </button>
              <button
                  onClick={handleConfirmExit}
                  className="flex-1 px-6 py-3 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-400 hover:to-red-500 text-white rounded-xl font-medium transition-all duration-300 hover:scale-105 shadow-lg shadow-red-500/25 focus:outline-none"
              >
                  –í—ã–π—Ç–∏
              </button>
                  </div>
                  </div>
                </div>
              </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è */}
      {showCompletionModal && (
        <div className="fixed inset-0 z-50 flex items-center justify-center p-4">
          {/* –§–æ–Ω */}
          <div 
            className="absolute inset-0 bg-black/80 backdrop-blur-sm animate-fade-in"
          ></div>
          
          {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
          <div className="relative glass rounded-3xl max-w-lg w-full border border-dark-600/30 shadow-2xl animate-fade-in-scale overflow-hidden">
            <div className="p-8">
              <div className="text-center mb-8">
                {/* –ò–∫–æ–Ω–∫–∞ —É—Å–ø–µ—Ö–∞ */}
                <div className="w-20 h-20 bg-gradient-to-br from-green-500/20 to-emerald-500/20 rounded-full flex items-center justify-center mx-auto mb-6 border-2 border-green-500/30">
                  <svg className="w-10 h-10 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                
                <h3 className="text-3xl font-bold text-white mb-3 bg-gradient-to-r from-white to-white/80 bg-clip-text text-transparent">
                  –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
                </h3>
                <p className="text-dark-300 text-lg leading-relaxed">
                  –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ AI —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è. 
                  <br />
                  –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∏ –ø–µ—Ä–µ–¥–∞–Ω—ã HR-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º.
                </p>
              </div>

              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="bg-dark-700/30 p-4 rounded-xl mb-6 border border-dark-600/30">
                <div className="flex items-center space-x-3 mb-3">
                  <div className="w-2 h-2 bg-green-400 rounded-full"></div>
                  <span className="text-green-400 text-sm font-medium">–ò–Ω—Ç–µ—Ä–≤—å—é —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ</span>
                  </div>
                <div className="flex items-center space-x-3 mb-3">
                  <div className="w-2 h-2 bg-blue-400 rounded-full"></div>
                  <span className="text-blue-400 text-sm font-medium">–û—Ç–≤–µ—Ç—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã AI</span>
                  </div>
                <div className="flex items-center space-x-3">
                  <div className="w-2 h-2 bg-purple-400 rounded-full"></div>
                  <span className="text-purple-400 text-sm font-medium">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–æ–º–ø–∞–Ω–∏–∏</span>
                </div>
              </div>

              <div className="text-center">
                <button
                  onClick={handleCompletionModalClose}
                  className="px-8 py-4 bg-gradient-to-r from-accent-blue to-accent-purple hover:from-accent-blue/90 hover:to-accent-purple/90 text-white rounded-xl font-semibold text-lg transition-all duration-300 hover:scale-105 shadow-xl shadow-accent-blue/25 focus:outline-none"
                >
                  –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                </button>
                
                <p className="text-dark-400 text-xs mt-4">
                  –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
                    </p>
                  </div>
                </div>
              </div>
            </div>
      )}

    </div>
  )
}

export default InterviewPage

